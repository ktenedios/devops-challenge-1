{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "variables": {
    "containerName": "warehouse-db",
    "containerImage": "mcr.microsoft.com/mssql/server:2019-latest",
    "containerInstanceName": "[concat(parameters('environment'), '-', parameters('containerInstanceName'))]",
    "containerDnsName": "[concat(parameters('environment'), '-', parameters('containerDnsName'))]",
    "containerFileShareVolumeName": "databasefilesharevolume",
    "containerFileShareVolumeMountPath": "[concat('/aci/', parameters('fileShareVolumeName'))]"
  },
  "parameters": {
    "environment": {
      "type": "string",
      "allowedValues": [
        "dev",
        "ci",
        "prd"
      ],
      "metadata": {
        "description": "Short string denoting environment to deploy to"
      }
    },
    "containerInstanceName": {
      "type": "string",
      "metadata": {
        "description": "Name to assign to Azure Container Instance"
      }
    },
    "containerDnsName": {
      "type": "string",
      "metadata": {
        "description": "DNS name to assign to the Azure Container Instance"
      }
    },
    "sqlServerSaPassword": {
      "type": "securestring",
      "metadata": {
        "description": "The password to assign to the SQL Server SA account"
      }
    },
    "dbUsername": {
      "type": "string",
      "metadata": {
        "description": "Username of the SQL login that is to be used by the File Processor application for connecting to the warehouse database"
      }
    },
    "dbPassword": {
      "type": "securestring",
      "metadata": {
        "description": "Password of the SQL login that is to be used by the File Processor application for connecting to the warehouse database"
      }
    },
    "fileShareStorageAccountName": {
      "type": "string",
      "metadata": {
        "description": "Name of storage account containing the file share that the container is to mount for permanent storage of database files"
      }
    },
    "fileShareVolumeName": {
      "type": "string",
      "metadata": {
        "description": "Name of file share volume to be mounted to the container for permanent storage of database files"
      }
    },
    "fileShareStorageAccountKey": {
      "type": "securestring",
      "metadata": {
        "description": "Storage account key the container should use for mounting the file share database files will be stored in"
      }
    }
  },
  "resources": [
    {
      "name": "[variables('containerInstanceName')]",
      "type": "Microsoft.ContainerInstance/containerGroups",
      "apiVersion": "2019-12-01",
      "location": "[resourceGroup().location]",
      "properties": {
        "containers": [
          {
            "name": "[variables('containerName')]",
            "properties": {
              "image": "[variables('containerImage')]",
              "resources": {
                "requests": {
                  "cpu": 1,
                  "memoryInGb": 3.5
                }
              },
              "ports": [
                {
                  "port": 1433
                }
              ],
              "environmentVariables": [
                {
                  "name": "ACCEPT_EULA",
                  "value": "Y"
                },
                {
                  "name": "SA_PASSWORD",
                  "secureValue": "[parameters('sqlServerSaPassword')]"
                },
                {
                  "name": "MSSQL_PID",
                  "value": "Developer"
                },
                {
                  "name": "MSSQL_COLLATION",
                  "value": "Latin1_General_CI_AS"
                }
              ],
              "volumeMounts": [
                {
                  "name": "[variables('containerFileShareVolumeName')]",
                  "mountPath": "[variables('containerFileShareVolumeMountPath')]"
                }
              ]
            }
          }
        ],
        "osType": "Linux",
        "ipAddress": {
          "type": "Public",
          "ports": [
            {
              "protocol": "tcp",
              "port": "1433"
            }
          ],
          "dnsNameLabel": "[variables('containerDnsName')]"
        },
        "volumes": [
          {
            "name": "[variables('containerFileShareVolumeName')]",
            "azureFile": {
              "shareName": "databaseacishare",
              "storageAccountName": "[parameters('fileShareStorageAccountName')]",
              "storageAccountKey": "[parameters('fileShareStorageAccountKey')]"
            }
          }
        ]
      }
    }
  ],
  "outputs": {
    "containerIPAddressFqdn": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.ContainerInstance/containerGroups/', variables('containerInstanceName'))).ipAddress.fqdn]"
    },
    "containerInstanceName": {
      "type": "string",
      "value": "[variables('containerInstanceName')]"
    },
    "containerResourceId": {
      "type": "string",
      "value": "[resourceId('Microsoft.ContainerInstance/containerGroups/', variables('containerInstanceName'))]"
    },
    "containerName": {
      "type": "string",
      "value": "[variables('containerName')]"
    },
    "dbConnectionString": {
      "type": "string",
      "value": "[concat('Server=', reference(resourceId('Microsoft.ContainerInstance/containerGroups/', variables('containerInstanceName'))).ipAddress.fqdn, ';Database=warehousedb;User ID=', parameters('dbUsername'), ';Password=', parameters('dbPassword'))]"
    },
    "containerFileShareVolumeMountPath": {
      "type": "string",
      "value": "[variables('containerFileShareVolumeMountPath')]"
    }
  }
}
